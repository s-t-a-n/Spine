; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32, sam3x8e, nucleo_f429zi, nucleo_f411ce, mock
; todo: sam3x8e avr-gcc's version does not seem to support charconv
include_dir = src
src_dir = src

[env]
monitor_speed = 115200
build_flags =
;    -std=c++17
    -std=gnu++17
build_src_flags =
    -Wall -Wextra -Werror
    -fno-common
    -fstack-usage
    -Wshadow
    -Wdouble-promotion
;    -Wconversion ; for unknown reasons build_src_flags doesnt stick to src dir and trips built of external packages
    -Wno-format
    -Wno-comment
    -Wno-unused-parameter
    -Wno-unused-function
    -Wno-unused-variable
build_unflags =
    -std=c++11
    -std=gnu++11
    -std=c++14
    -std=gnu++14
debug_build_flags =
    -D DEBUG_SPINE
    -g3
    -u_printf_float
    -u_scanf_float
    -O1
check_tool = clangtidy
; todo: investigate use of cppcheck, misra
check_flags =
    cppcheck:  --enable=warning,style,performance,portability
    clangtidy: -extra-arg=-std=c++17 -fix --config-file=.clang-tidy


[arduino]
build_flags =
    ${env.build_flags}
    -DPIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
lib_deps =
    ${env.lib_deps}
;    https://github.com/s-t-a-n/Arduino-Helpers.git
    hideakitai/ArxSmartPtr@^0.3.0

[embedded]
build_flags =
    ${env.build_flags}
    -D EMBEDDED

;[env:atmega328p]
;extends = embedded, arduino
;platform = atmelavr
;board = uno
;board_build.mcu = atmega328p
;framework = arduino
;
;[env:atmega2560]
;extends = embedded, arduino
;platform = atmelavr
;board = megaatmega2560
;framework = arduino

[env:esp32]
extends = embedded, arduino
platform = espressif32
board = az-delivery-devkit-v4
framework = arduino

[env:sam3x8e]
extends = embedded, arduino
platform = atmelsam
board = due
framework = arduino
build_src_flags =
    ${env.build_src_flags}
    -Wno-expansion-to-defined
    -Wno-unused-but-set-variable
    -Wno-register
    -Wno-shadow

[env:sam3x8e-debug]
extends = embedded, arduino
platform = atmelsam
board = due
framework = arduino
build_type = debug
;build_flags =
;    ${env.build_flags}
;    -D DEBUG_SPINE
debug_build_flags =
    ${env.debug_build_flags}
build_src_flags =
    ${env.build_src_flags}
    -Wno-expansion-to-defined
    -Wno-unused-but-set-variable
    -Wno-register


[env:nucleo_f429zi]
extends = embedded, arduino
platform = ststm32
board = nucleo_f429zi
framework = arduino
upload_protocol = stlink

[env:nucleo_f429zi-debug]
extends = embedded, arduino
platform = ststm32
build_type = debug
build_flags =
    ${env.build_flags}
    -D DEBUG_SPINE
debug_build_flags =
    ${env.debug_build_flags}
board = nucleo_f429zi
framework = arduino
upload_protocol = stlink
debug_tool = stlink

[env:nucleo_f411ce]
extends = embedded, arduino
platform = ststm32
board = genericSTM32F411RE
framework = arduino
upload_protocol = stlink
debug_tool = stlink

[env:nucleo_f411ce-debug]
extends = embedded, arduino
platform = ststm32
build_type = debug
build_flags =
    ${env.build_flags}
    -D DEBUG_SPINE
debug_build_flags =
    ${env.debug_build_flags}
board = genericSTM32F411RE
framework = arduino
upload_protocol = stlink
debug_tool = stlink

[env:mock]
platform = native
build_flags =
    ${env.build_flags}
    -D NATIVE
    -pthread
debug_build_flags =
    ${env.debug_build_flags}
    -pthread
build_type = debug
lib_compat_mode = off
test_ignore = test_embedded
debug_init_break = tbreak setup
lib_deps =
    ${env.lib_deps}
    fabiobatsilva/ArduinoFake@^0.4.0

[unittest]
build_flags =
    ${env.build_flags}
    -D NATIVE
    -D UNITTEST
build_src_flags =
    ${env.build_src_flags}
debug_build_flags =
    ${env.debug_build_flags}
    -D NATIVE
    -D UNITTEST
    -ggdb3
    -D_GLIBCXX_DEBUG
    -D_GLIBCXX_ASSERTIONS
    -D FAKEIT_ASSERT_ON_UNEXPECTED_METHOD_INVOCATION
    -fsanitize=address
lib_deps =
    ${env.lib_deps}
    fabiobatsilva/ArduinoFake@^0.4.0
lib_compat_mode = off
test_ignore = test_embedded
test_build_src = yes

[env:unittest]
platform = native
extends = unittest

[env:unittest-debug]
platform = native
extends = unittest
build_type = debug
